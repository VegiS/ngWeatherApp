!function(){"use strict";angular.module("ngWeatherApp",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngMessages","ngAria","ngResource","ngRoute","toastr","iso-3166-country-codes"])}(),function(){"use strict";function a(a){var e="279b4be6d54c8bf6ea9b12275a567156",t="http://api.openweathermap.org/data/2.5/";return a(t+":path/:subPath?q=:location",{APPID:e,mode:"json",callback:"JSON_CALLBACK",units:"metric",lang:"en"},{queryWeather:{method:"JSONP",params:{path:"weather"},isArray:!1,headers:{"x-api-key":e}},queryForecast:{method:"JSONP",params:{path:"forecast"},isArray:!1,headers:{"x-api-key":e}},queryForecastDaily:{method:"JSONP",params:{path:"forecast",subPath:"daily",cnt:7},isArray:!1,headers:{"x-api-key":e}}})}a.$inject=["$resource"],angular.module("ngWeatherApp").factory("openWeatherMap",a).value("exampleLocations",["Hamburg","San Francisco","Berlin","Athens","Tokyo","New York","Moscow","Clonakilty"]).value("stormLocations",["Sylt","St. Peter-Ording","Husum","Bremerhaven","Hamburg","Kiel","Lübeck"])}(),function(){"use strict";angular.module("ngWeatherApp").filter("interpolate",["version",function(a){return function(e){return String(e).replace(/\%VERSION\%/gm,a)}}]).filter("placeholder",[function(){return function(a,e){return angular.isUndefined(a)||""==a?e:a}}])}(),function(){"use strict";angular.module("ngWeatherApp").directive("appVersion",["version",function(a){return function(e,t,n){t.text(a)}}]).directive("weatherPanel",[function(){return{restrict:"EA",scope:{useDayForecast:"=showEntry",forecast:"=weatherPanel"},templateUrl:"app/components/weather/partials/_weather-panel-light.html",link:function(a,e,t){a.getIconImageUrl=function(a){return a?"http://openweathermap.org/img/w/"+a+".png":""},a.parseDate=function(a){return new Date(1e3*a)}}}}]).directive("weatherPanelWind",[function(){return{restrict:"EA",scope:{useDayForecast:"=showEntry",forecast:"=weatherPanel"},templateUrl:"partials/_weather-panel-wind.html",link:function(a,e,t){a.getIconImageUrl=function(a){return a?"http://openweathermap.org/img/w/"+a+".png":""},a.parseDate=function(a){return new Date(1e3*a)}}}}])}(),function(){"use strict";function a(){function a(a){var e=this;e.relativeDate=a(e.creationDate).fromNow()}a.$inject=["moment"];var e={restrict:"E",templateUrl:"app/components/navbar/navbar.html",scope:{creationDate:"="},controller:a,controllerAs:"vm",bindToController:!0};return e}angular.module("ngWeatherApp").directive("acmeNavbar",a)}(),function(){"use strict";function a(a,e,t,n,s,r){var i=this;i.message="",i.hasState="",i.exampleLocations=n,i.stormLocations=s,i.iconBaseUrl="http://openweathermap.org/img/w/",i.forecast=t.queryForecastDaily({location:n[0]}),i.getForecastByLocation=function(){return""==i.location||void 0==i.location?(i.hasState="has-warning",void(i.message="Please provide a location")):(i.hasState="has-success",void(i.forecast=t.queryForecastDaily({location:i.location})))},i.setLocation=function(a){i.location=a,i.getForecastByLocation()},i.getIconImageUrl=function(a){return a?i.iconBaseUrl+a+".png":""}}a.$inject=["$timeout","toastr","openWeatherMap","exampleLocations","stormLocations","ISO3166"],angular.module("ngWeatherApp").controller("MainController",a)}(),function(){"use strict";function a(a){a.debug("runBlock end")}a.$inject=["$log"],angular.module("ngWeatherApp").run(a)}(),function(){"use strict";function a(a){a.when("/",{templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"main"}).otherwise({redirectTo:"/"})}a.$inject=["$routeProvider"],angular.module("ngWeatherApp").config(a)}(),function(){"use strict";angular.module("ngWeatherApp").constant("malarkey",malarkey).constant("moment",moment)}(),function(){"use strict";function a(a,e){a.debugEnabled(!0),e.allowHtml=!0,e.timeOut=3e3,e.positionClass="toast-top-right",e.preventDuplicates=!0,e.progressBar=!0}a.$inject=["$logProvider","toastrConfig"],angular.module("ngWeatherApp").config(a)}(),angular.module("ngWeatherApp").run(["$templateCache",function(a){a.put("app/main/main.html",'<div class=container><div><acme-navbar creation-date=main.creationDate></acme-navbar></div><!--<div class="jumbotron text-center">\n    <h1>\'Allo, \'Allo!</h1>\n    <p class="lead">\n      <img src="assets/images/yeoman.png" alt="I\'m Yeoman"><br>\n      Always a pleasure scaffolding your apps.\n    </p>\n    <p class="animated infinite" ng-class="main.classAnimation">\n      <button type="button" class="btn btn-lg btn-success" ng-click="main.showToastr()">Splendid Toastr</button>\n    </p>\n    <p>\n      With ♥ thanks to the contributions of<acme-malarkey extra-values="[\'Yeoman\', \'Gulp\', \'Angular\']"></acme-malarkey>\n    </p>\n  </div>--><!--<div class="row">\n    <div class="col-sm-6 col-md-4" ng-repeat="awesomeThing in main.awesomeThings | orderBy:\'rank\'">\n      <div class="thumbnail">\n        <img class="pull-right" ng-src="assets/images/{{ awesomeThing.logo }}" alt="{{ awesomeThing.title }}">\n        <div class="caption">\n          <h3>{{ awesomeThing.title }}</h3>\n          <p>{{ awesomeThing.description }}</p>\n          <p><a ng-href="{{awesomeThing.url}}">{{ awesomeThing.url }}</a></p>\n        </div>\n      </div>\n    </div>\n  </div>--><div class=container><div class=weather-search><div class=row><div class=col-xs-12><div><form class=form-inline role=form><span class=btn-group><button ng-repeat="item in main.exampleLocations" ng-click=main.setLocation(item) type=submit class="btn btn-default">{{item}}</button><hr><hr></span><span class="form-group {{main.hasState}}"><label class=sr-only for=main.location>City</label><input ng-model=main.location type=text class=form-control id=location placeholder=City> </span><button ng-click=main.getForecastByLocation(main.location) type=submit class="btn btn-primary">Search!</button> <span ng-show=main.message class=alert><span class="glyphicon glyphicon-arrow-left">&nbsp;</span>{{main.message}}</span></form></div></div></div></div><div class=weather-data ng-show=true><div class=row><div class=col-xs-12><div><h3>{{main.forecast.city.name |placeholder:\'?\'}}, {{forecast.city.country | isoCountry}} <small>Lon: {{main.forecast.city.coord.lon | number:2}} Lat: {{main.forecast.city.coord.lat | number:2}} Population: {{main.forecast.city.population | number:0}}</small></h3></div></div></div><div class=row><div class=col-xs-12><div weather-panel=forecast show-entry=main.forecast.list[0]></div></div></div><div class=row><div class=col-xs-4><div weather-panel=forecast show-entry=main.forecast.list[1]></div></div><div class=col-xs-4><div weather-panel=forecast show-entry=main.forecast.list[2]></div></div><div class=col-xs-4><div weather-panel=forecast show-entry=main.forecast.list[3]></div></div></div></div></div></div>'),a.put("app/components/navbar/navbar.html",'<nav class="navbar navbar-static-top navbar-inverse"><div class=container-fluid><div class=navbar-header><a class=navbar-brand href=https://github.com/Swiip/generator-gulp-angular><span class="glyphicon glyphicon-home"></span> Scalable Weather App</a></div><div class="collapse navbar-collapse" id=bs-example-navbar-collapse-6><ul class="nav navbar-nav"><li class=active><a ng-href=#>Home</a></li></ul><ul class="nav navbar-nav navbar-right acme-navbar-text"><li>Application was created {{ vm.relativeDate }}.</li><br><li>IP Address: {{ vm.relativeDate }}.</li></ul></div></div></nav>'),a.put("app/components/weather/partials/_weather-panel-light.html","<div class=\"weather panel panel-primary\"><div class=panel-heading>{{parseDate(useDayForecast.dt) | date:'fullDate'}}</div><div class=panel-body><div><p class=lead><img ng-src={{getIconImageUrl(useDayForecast.weather[0].icon)}}> {{useDayForecast.temp.day | number:1}}&#176;C {{useDayForecast.weather[0].main}}</p><p>{{useDayForecast.weather[0].description}}&nbsp;&#126;&nbsp; High: {{useDayForecast.temp.max}}&#176;C&nbsp;&#126;&nbsp; Low: {{useDayForecast.temp.min}}&#176;C</p></div></div><div class=panel-footer><small>Day: {{useDayForecast.temp.day}}&#176;C&nbsp;&#126;&nbsp; Night: {{useDayForecast.temp.night}}&#176;C&nbsp;&#126;&nbsp; Pressure: {{useDayForecast.pressure}} hPa&nbsp;&#126;&nbsp; Humidity: {{useDayForecast.humidity}}%</small></div></div>"),a.put("app/components/weather/partials/_weather-panel-wind.html","<div class=\"weather panel panel-primary\"><div class=panel-heading>{{parseDate(useDayForecast.dt) | date:'fullDate'}}</div><div class=panel-body><div><p class=lead><img ng-src={{getIconImageUrl(useDayForecast.weather[0].icon)}}> Speed: {{ (useDayForecast.speed * 3.6).toFixed(2) }} km/h ({{useDayForecast.speed}} m/s)<br>Pressure: {{useDayForecast.pressure}} hPa</p><p>{{useDayForecast.temp.day | number:1}}&#176;C {{useDayForecast.weather[0].main}}&nbsp;&#126;&nbsp; {{useDayForecast.weather[0].description}}&nbsp;&#126;&nbsp; High: {{useDayForecast.temp.max}}&#176;C&nbsp;&#126;&nbsp; Low: {{useDayForecast.temp.min}}&#176;C</p></div></div><div class=panel-footer><small>Day: {{useDayForecast.temp.day}}&#176;C&nbsp;&#126;&nbsp; Night: {{useDayForecast.temp.night}}&#176;C&nbsp;&#126;&nbsp; Pressure: {{useDayForecast.pressure}} hPa&nbsp;&#126;&nbsp; Humidity: {{useDayForecast.humidity}}%</small></div></div>")}]);
//# sourceMappingURL=../maps/scripts/app-2b8bdfaf04.js.map
